!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).JsonicDirective=e()}}((function(){var e={};Object.defineProperty(e,"__esModule",{value:!0}),e.Directive=void 0;const n=e=>("string"==typeof e?e.split(/\s*,\s*/):e||[]).filter(e=>null!=e&&""!==e),l=(e,l)=>{var o,t;let i,s={open:n(null===(o=null==l?void 0:l.rules)||void 0===o?void 0:o.open),close:n(null===(t=null==l?void 0:l.rules)||void 0===t?void 0:t.close)},r=l.name,d=l.open,u=l.close,c=l.custom;if("string"==typeof l.action){let n=l.action;i=l=>l.node=e.util.prop(e.options,n)}else i=l.action;let a={},f="#OD_"+r,p="#CD_"+r,h=e.fixed(d),v=null==u?null:e.fixed(u);if(null!=h)throw new Error("Directive open token already in use: "+d);a[f]=d,null==v&&null!=u&&(a[p]=u),e.options({fixed:{token:a},error:{[r+"_close"]:null==u?null:"directive "+r+' close "'+u+'" without open "'+d+'"'},hint:{[r+"_close"]:null==u?null:`\nThe ${r} directive must start with the characters "${d}" and end\nwith the characters "${u}". The end characters "${u}" may not\nappear without the start characters "${d}" appearing first:\n"${d}...${u}".\n`}});let m=e.token.CA;h=e.fixed(d),v=null==u?null:e.fixed(u),s.open.forEach(n=>{e.rule(n,e=>(e.open({s:[h],p:r,n:{["dr_"+r]:1},g:"start"}),null!=u&&(e.open({s:[h,v],b:1,p:r,n:{["dr_"+r]:1},g:"start,end"}),e.close({s:[v],b:1,g:"end"})),e))}),null!=u&&s.close.forEach(n=>{e.rule(n,e=>{e.close([{s:[v],c:e=>1===e.n["dr_"+r],b:1,g:"end"},{s:[m,v],c:e=>1===e.n["dr_"+r],b:1,g:"end,comma"}])})}),e.rule(r,e=>e.clear().bo(e=>{e.node={}}).open([null!=u?{s:[v],b:1}:null,{p:"val",n:null==u?{dlist:1,dmap:1}:{dlist:0,dmap:0}}]).bc((function(e,n,l,o){let t=i.call(this,e,n,l,o);if(null==t?void 0:t.isToken)return t})).close(null!=u?[{s:[v]},{s:[m,v]}]:[])),c&&c(e,{OPEN:h,CLOSE:v,name:r})};return e.Directive=l,l.defaults={rules:{open:"val",close:"list,elem,map,pair"}},e}));